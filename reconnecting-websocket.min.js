!function(e,t){"function"==typeof define&&define.amd?define([],t):"undefined"!=typeof module&&module.exports?module.exports=t():e.ReconnectingWebSocket=t()}(this,function(){if("WebSocket"in window)return e.prototype.onopen=function(e){},e.prototype.onclose=function(e){},e.prototype.onconnecting=function(e){},e.prototype.onmessage=function(e){},e.prototype.onerror=function(e){},e.prototype.onsend=function(e){},e.CONNECTING=WebSocket.CONNECTING,e.OPEN=WebSocket.OPEN,e.CLOSING=WebSocket.CLOSING,e.CLOSED=WebSocket.CLOSED,e;function e(e,t,n){var o={automaticOpen:!0,reconnectInterval:1e3,maxReconnectInterval:3e4,reconnectDecay:1.5,timeoutInterval:2e3,maxReconnectAttempts:null,binaryType:"blob"};n||(n={});for(var c in o)void 0!==n[c]?this[c]=n[c]:this[c]=o[c];this.url=e,this.reconnectAttempts=0,this.readyState=WebSocket.CONNECTING,this.protocol=null;var i,r=this,s=!1,a=!1,d=document.createElement("div");function u(e,t){var n=document.createEvent("CustomEvent");return n.initCustomEvent(e,!1,!1,t),n}d.addEventListener("open",function(e){r.onopen(e)}),d.addEventListener("close",function(e){r.onclose(e)}),d.addEventListener("connecting",function(e){r.onconnecting(e)}),d.addEventListener("message",function(e){r.onmessage(e)}),d.addEventListener("error",function(e){r.onerror(e)}),d.addEventListener("send",function(e){r.onsend(e)}),this.addEventListener=d.addEventListener.bind(d),this.removeEventListener=d.removeEventListener.bind(d),this.dispatchEvent=d.dispatchEvent.bind(d),this.open=function(e){if((i=new WebSocket(r.url,t||[])).binaryType=this.binaryType,e){if(this.maxReconnectAttempts&&this.reconnectAttempts>this.maxReconnectAttempts)return}else d.dispatchEvent(u("connecting")),this.reconnectAttempts=0;var n=i,o=setTimeout(function(){var e=u("error",{timeout:!0});Object.defineProperty(e,"target",{value:i,enumerable:!0}),d.dispatchEvent(e),a=!0,n.close(),a=!1},r.timeoutInterval);i.onopen=function(t){clearTimeout(o),r.protocol=i.protocol,r.readyState=WebSocket.OPEN,r.reconnectAttempts=0;var n=u("open");n.isReconnect=e,e=!1,d.dispatchEvent(n)},i.onclose=function(t){if(clearTimeout(o),i=null,s)r.readyState=WebSocket.CLOSED,d.dispatchEvent(u("close"));else{r.readyState=WebSocket.CONNECTING;var n=u("connecting");n.code=t.code,n.reason=t.reason,n.wasClean=t.wasClean,d.dispatchEvent(n),e||a||d.dispatchEvent(u("close"));var c=r.reconnectInterval*Math.pow(r.reconnectDecay,r.reconnectAttempts);setTimeout(function(){r.reconnectAttempts++,r.open(!0)},c>r.maxReconnectInterval?r.maxReconnectInterval:c)}},i.onmessage=function(e){var t=u("message");t.data=e.data,d.dispatchEvent(t)},i.onerror=function(e){var t=new e.constructor(e.type,e);Object.defineProperty(t,"target",{value:e.target,enumerable:!0}),d.dispatchEvent(t)}},this.automaticOpen&&this.open(!1),this.send=function(e){if(i){var t=u("send");return t.data=e,d.dispatchEvent(t),i.send(e)}throw new Error("INVALID_STATE_ERR: Pausing to reconnect websocket")},this.close=function(e,t){void 0===e&&(e=1e3),s=!0,i&&i.close(e,t)},this.refresh=function(){i&&i.close()}}});